const fs = require("fs");

// Fun√ß√£o para validar um arquivo JSON
function validateJsonFile(filePath) {
  console.log(`\nValidando arquivo: ${filePath}`);

  try {
    // Verificar se o arquivo existe
    if (!fs.existsSync(filePath)) {
      console.error(`  ‚ùå Arquivo n√£o encontrado: ${filePath}`);
      return false;
    }

    // Verificar tamanho do arquivo
    const stats = fs.statSync(filePath);
    console.log(`  üìä Tamanho do arquivo: ${stats.size} bytes`);

    // Ler o conte√∫do do arquivo
    const content = fs.readFileSync(filePath, "utf8");
    console.log(
      `  üìÑ Primeiros 100 caracteres: ${content.substring(0, 100)}...`
    );

    // Tentar fazer o parse do JSON
    const jsonData = JSON.parse(content);
    console.log(`  ‚úÖ JSON v√°lido`);

    // Verificar propriedades essenciais para anima√ß√µes Lottie
    if (jsonData.v && jsonData.fr && jsonData.w && jsonData.h) {
      console.log(`  ‚úÖ Parece ser uma anima√ß√£o Lottie v√°lida`);
      console.log(
        `  üìã Vers√£o: ${jsonData.v}, Framerate: ${jsonData.fr}, Dimens√µes: ${jsonData.w}x${jsonData.h}`
      );
      return true;
    } else {
      console.warn(
        `  ‚ö†Ô∏è Arquivo JSON n√£o parece ser uma anima√ß√£o Lottie v√°lida`
      );
      return false;
    }
  } catch (error) {
    console.error(`  ‚ùå Erro ao validar JSON: ${error.message}`);
    return false;
  }
}

// Validar os arquivos
console.log("=== VALIDA√á√ÉO DE ARQUIVOS JSON ===");
validateJsonFile("mail-box.json");
validateJsonFile("letter-opening-animation.json");
validateJsonFile("test-mailbox.json");
validateJsonFile("test-letter.json");
console.log("\n=== FIM DA VALIDA√á√ÉO ===");
